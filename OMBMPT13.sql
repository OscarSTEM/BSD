# ================================================= PT 13 - MODIFICACIONES Y FUNCIONES ================================================ #
#Oscar Manuel Benito Martin
# ================================================================================================= #

# EJ1 - BORRA LOS ACTORES CUYO NOMBRE COMIENCE POR 'A'.
USE SAKILA;
SELECT * FROM FILM;
DELETE FROM ACTOR WHERE FIRST_NAME="%A";
# EJ2 - CREA UNA FUNCIÓN QUE RECIBA EL ID DE UNA PELÍCULA Y MUESTRE SU CATEGORÍA.
#     - CREA UNA FUNCIÓN QUE TRANSFORME MINUTOS A FORMATO TIME.
#     - CREA UNA VISTA QUE MUESTRE EL NOMBRE DE LAS PELÍCULAS, 
#       SU DURACIÓN EN FORMATO TIME Y LA CATEGORÍA (EN MAYÚSCULA) DE LA PELÍCULA.
DROP FUNCTION IF EXISTS GET_CATEGORIA;

#ID PELIS
CREATE FUNCTION GET_CATEGORIA(ID INT)
RETURNS VARCHAR(50) DETERMINISTIC
RETURN(SELECT RATING
FROM FILM 
WHERE FILM_ID=ID);
SELECT GET_CATEGORIA('1');

#MINUTERO
DROP FUNCTION IF EXISTS MINUTERO;
CREATE FUNCTION MINUTERO(MINUTOS INT)
RETURNS TIME DETERMINISTIC
RETURN MINUTOS/60;

SELECT MINUTERO(240);

#VISTA
CREATE VIEW NOMBRE_PELIS_DURACION AS
SELECT 
	TITLE AS NOMBRE_PELICULA,
    MINUTERO(LENGTH) AS DURACION,
    UPPER(RATING) AS CATEGORIA
    FROM FILM;
    
# EJ3 - AÑADE UNA COLUMNA A LA TABLA INVENTORY QUE INIDQUE SI LA PELÍCULA ESTÁ DISPONIBLE O NO.
#     - DEBES INIDCAR QUE TODAS LAS PELÍCULAS ESTÁN DISPONIBLES MENOS LAS QUE DURAN MÁS DE DOS HORAS.
#     - DEBES ACTUALIZAR EL LAST_UPDATE DE LAS PELÍCULAS QUE NO ESTÁN DISPONIBLES (PON LA FECHA DE HOY
ALTER TABLE INVENTORY ADD COLUMN DISPONIBLE BOOLEAN;
UPDATE INVENTORY SET DISPONIBLE=
CASE 
		WHEN LENGTH(FILM_ID) > 120 THEN "DISPONIBLE"
		ELSE "NO DISPONIBLE"
	END	AS DURACION 
FROM FILM;
INSERT INTO FILM.LAST_UPDATE VALUES (NOW());

